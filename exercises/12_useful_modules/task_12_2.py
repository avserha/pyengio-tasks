# -*- coding: utf-8 -*-
"""
Завдання 12.2

Функція ping_ip_addresses із завдання 12.1 приймає лише список адрес, але було
б зручно мати можливість вказувати адреси за допомогою діапазону, наприклад,
192.168.100.1-10.

У цьому завданні необхідно створити функцію convert_ranges_to_ip_list, яка
конвертує список IP-адрес у різних форматах у список, де кожна IP-адреса
вказана окремо.

Функція очікує як аргумент на список, в якому містяться IP-адреси та/або
діапазони IP-адрес.

Елементи списку можуть бути у форматі:
* 10.1.1.1
* 10.1.1.1-10.1.1.10
* 10.1.1.1-10

Якщо адреса вказана як діапазон, потрібно розгорнути діапазон в окремі адреси,
включаючи останню адресу діапазону. Для спрощення завдання можна вважати, що в
діапазоні завжди змінюється тільки останній октет адреси.
Функція повертає список IP-адрес.

Приклад виклику функції
In [3]: convert_ranges_to_ip_list(['8.8.4.4', '1.1.1.1-3', '172.21.41.128-172.21.41.132'])
Out[3]:
['8.8.4.4',
 '1.1.1.1',
 '1.1.1.2',
 '1.1.1.3',
 '172.21.41.128',
 '172.21.41.129',
 '172.21.41.130',
 '172.21.41.131',
 '172.21.41.132']

In [4]: convert_ranges_to_ip_list(['8.8.4.4', '1.1.1.10-12', '10.1.1.1-10.1.1.4'])
Out[4]:
['8.8.4.4',
 '1.1.1.10',
 '1.1.1.11',
 '1.1.1.12',
 '10.1.1.1',
 '10.1.1.2',
 '10.1.1.3',
 '10.1.1.4']

"""


def convert_ranges_to_ip_list(ip_list: list) -> list:
    result = []
    for ip in ip_list:
        if "-" in ip:
            ip_list = ip.split(".")
            if len(ip_list) == 4:
                ip = ".".join(ip_list[0:3]) + "." + ip_list[3].split("-")[0]
                result.append(ip)
                ip_start = int(ip_list[3].split("-")[0])
                ip_end = int(ip_list[3].split("-")[1])
                for i in range(1, ip_end - ip_start + 1):
                    ip = ".".join(ip_list[0:3])
                    ip += "." + str(int(ip_list[3].split("-")[0]) + i)
                    result.append(ip)
            elif len(ip_list) > 4:
                ip_start = ip.split("-")[0].split(".")
                ip_end = ip.split("-")[1].split(".")
                result.append(".".join(ip_start))
                for i in range(1, int(ip_end[3]) - int(ip_start[3]) + 1):
                    ip = ".".join(ip_start[0:3])
                    ip += "." + str(int(ip_start[3]) + i)
                    result.append(ip)
        else:
            result.append(ip)
    return result
